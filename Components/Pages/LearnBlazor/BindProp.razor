@page "/learn-blazor/bind-prop"

<h1>Product - Data Binding</h1>

@if (_product != null)
{
    <div class="row">
        <div class="col-6 border p-3">
            <h3 class="text-primary">Product Playground</h3>

            <div class="d-flex align-items-center gap-2 mb-3">
                <p class="m-0">IsActive</p>

                @* We can use either this binding (just @bind, and it will work good). *@
                <input type="checkbox" @bind="_product.IsActive" />

                @* or this way, but we need to define the checked attribute with a ternary operator just to say if it is checked *@
                @* <input type="checkbox" @bind-value="_product.IsActive" checked="@(_product.IsActive ? "checked" : null)" /> *@
            </div>

            <div class="mb-3">
                <p class="m-0">Input Price: </p>

                @* One way binding *@
                @* <input type="number" value="@_product.Price" /> <br /> *@

                @* Two ways binding *@
                <input type="number" @bind="@_product.Price" @bind:event="oninput" /> <br />
                @* or this option, but here we have to specify a value part in both cases (value nad event) *@
                @* <input type="number" @bind-value="@_product.Price" @bind-value:event="oninput" /> *@
            </div>

            <div>
                <p class="m-0">Product Properties: </p>

                <select @bind="_selectedProp">
                    @foreach (var prop in _product.ProductProperties)
                    {
                        <option value="@prop.Value">@prop.Key</option>
                    }
                </select>
            </div>
        </div>

        <div class="col-6 border p-3">
            <h3 class="text-primary">Product Summary</h3>

            <p>Name: @_product.Name </p>

            <p>Price: @_product.Price</p>

            <p>IsActive: @_product.IsActive</p>

            <p>This Product is: @(_product.IsActive ? "Active" : "Inactive")</p>

            @if (!string.IsNullOrEmpty(_selectedProp))
            {
                <p>Selected Prop Value: @_selectedProp</p>
            }
        </div>

        <div class="col-12 p-4">
            <h2 class="text-success">Product Table</h2>

            <table class="table table-striped">
                <thead>
                    <tr>
                        <td>Product Name</td>

                        <td>Price</td>

                        <td>Is Active</td>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var product in _productList)
                    {
                        <tr>
                            <td><input type="text" @bind="product.Name" @bind:event="oninput" /></td>

                            <td><input type="text" @bind="product.Price" @bind:event="oninput" /></td>

                            <td><input type="checkbox" @bind="product.IsActive" /></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <br />

        <div class="col-12">
            <h3 class="text-black">Product Summary</h3>

            @foreach (var product in _productList)
            {
                <p>@product.Name [@product.Price] is @(product.IsActive ? "Active" : "Inactive")</p>
            }
        </div>
    </div>
}

@code {
    private Product? _product;
    private string _selectedProp = string.Empty;
    private List<Product> _productList = new List<Product>();

    protected override void OnInitialized()
    {
        _product = new Product()
            {
                Id = 1,
                Name = "Product 1",
                IsActive = true,
                Price = 5,
                ProductProperties = new List<ProductProp>
                {
                    new ProductProp {Id = 1, Key = "Color", Value = "Red"},
                    new ProductProp {Id = 2, Key = "Size", Value = "20oz"},
                    new ProductProp {Id = 3, Key = "Flavor", Value = "Rose"},
                }
            };

        _productList.Add(new Product()
            {
                Id = 1,
                Name = "Midnight Blaze",
                IsActive = false,
                Price = 5.99m,
                ProductProperties = new List<ProductProp>
                {
                    new ProductProp {Id = 1, Key = "Color", Value = "Red"},
                    new ProductProp {Id = 2, Key = "Size", Value = "20oz"},
                    new ProductProp {Id = 3, Key = "Flavor", Value = "Rose"},
                }
            }
        );

        _productList.Add(new Product()
            {
                Id = 2,
                Name = "Blossom Lily",
                IsActive = false,
                Price = 10.59m,
                ProductProperties = new List<ProductProp>
                    {
                    new ProductProp {Id = 1, Key = "Color", Value = "White"},
                    new ProductProp {Id = 2, Key = "Size", Value = "18oz"},
                    new ProductProp {Id = 3, Key = "Flavor", Value = "Lily"},
                    }
            }
        );
    }
}
