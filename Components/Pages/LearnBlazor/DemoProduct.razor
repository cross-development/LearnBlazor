@page "/learn-blazor/demo-product"

<h1 class="text-primary">DemoProduct</h1>

<div class="p-2 mt-2">
    <div class="row">
        @foreach (var product in _productList)
        {
            <div class="bg-light border col-6">
                <h4 class="text-secondary">Product - @product.Id</h4>

                <p>Name - @product.Name</p>

                <div class="d-flex align-items-center gap-4">
                    <p>Show Properties:</p>

                    <input type="checkbox" @bind="@product.IsActive" />
                </div>

                @if (product.IsActive)
                {
                    <div>
                        @foreach (var property in product.ProductProperties)
                        {
                            <p>@property.Key - @property.Value</p>
                        }
                    </div>
                }

                <input type="button"
                       value="Delete"
                       style="width:100px"
                       class="btn btn-danger"
                       @onclick="() => RemoveProduct(product.Id)" />
            </div>
        }
    </div>

    <div class="row pt-4">
        <input type="button"
               value="Counter"
               style="width:100px"
               class="btn btn-success"
               @onclick="() => IncrementCount(5)" />

        <p>Count: @Count</p>
    </div>
</div>

@code {
    private List<Product> _productList = new List<Product>();

    private int Count { get; set; } = 0;

    protected override void OnInitialized()
    {
        _productList.Add(new Product()
            {
                Id = 1,
                Name = "Midnight Blaze",
                IsActive = false,
                Price = 5.99m,
                ProductProperties = new List<ProductProp>
                {
                    new ProductProp {Id = 1, Key = "Color", Value = "Red"},
                    new ProductProp {Id = 2, Key = "Size", Value = "20oz"},
                    new ProductProp {Id = 3, Key = "Flavor", Value = "Rose"},
                }
            }
        );

        _productList.Add(new Product()
            {
                Id = 2,
                Name = "Blossom Lily",
                IsActive = false,
                Price = 10.59m,
                ProductProperties = new List<ProductProp>
                {
                    new ProductProp {Id = 1, Key = "Color", Value = "White"},
                    new ProductProp {Id = 2, Key = "Size", Value = "18oz"},
                    new ProductProp {Id = 3, Key = "Flavor", Value = "Lily"},
                }
            }
        );
    }

    private void IncrementCount(int counter)
    {
        Count += counter;
    }

    private void RemoveProduct(int id)
    {
        var productToRemove = _productList.FirstOrDefault(product => product.Id == id);

        if (productToRemove != null)
        {
            _productList.Remove(productToRemove);
        }
    }
}
